# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'camera_item.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
# from queue import Queue

import cv2
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import pyqtSignal
from PyQt5.QtGui import QPixmap
from queue import Queue
from utils_huy_quang.Process_Capture import ProcessCaptureThread
from D3.Process_tracking import ProcessD3Thread
from D3.Process_show import ProcessShowThread


class D3_Camera_Item(QtWidgets.QWidget):
    sig_new_cam_inf = pyqtSignal(int, str, int, bool)
    sig_cancel_add_cam = pyqtSignal()

    def __init__(self):
        super().__init__()
        self.rtsp_url = r"C:\Users\ASUS\Desktop\daoquang1612\parking_project\datn\Cam_D35\Final\D3_truoc_final.mp4"
        self.camera_name = "D3_Camera"

        self.queue_capture = Queue()
        self.queue_tracking = Queue()
        self.queue_output = Queue()
        self.queue_lp = Queue()

        self.process_capture = ProcessCaptureThread(self.queue_capture, self.rtsp_url, self.camera_name)
        self.process_tracking = ProcessD3Thread(self.queue_capture, self.queue_tracking)
        self.process_show = ProcessShowThread(self.queue_tracking, self.queue_lp, self.queue_output)

        self.setupUi()
        self.camera_frame.setSizePolicy(QtWidgets.QSizePolicy.Policy.Ignored, QtWidgets.QSizePolicy.Policy.Ignored)

    def slot_lp_from_lp(self, car_info):
        if self.queue_lp.qsize() < 1:
            self.queue_lp.put(car_info)

    def start(self):
        self.process_capture.start()
        self.process_tracking.start()
        self.process_show.start()

    def setupUi(self):
        self.setObjectName("form_camera")
        self.resize(245, 108)
        self.setStyleSheet("")
        self.layout_main = QtWidgets.QGridLayout(self)
        self.layout_main.setContentsMargins(0, 0, 0, 0)
        self.layout_main.setSpacing(0)
        self.layout_main.setObjectName("layout_main")
        self.camera_frame = QtWidgets.QLabel(self)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.camera_frame.sizePolicy().hasHeightForWidth())
        self.camera_frame.setSizePolicy(sizePolicy)
        self.camera_frame.setStyleSheet("background:black")
        self.camera_frame.setObjectName("camera_frame")
        self.layout_main.addWidget(self.camera_frame, 1, 0, 1, 2)

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

    def paintEvent(self, event):
        current_frame = None
        if self.queue_output.qsize() > 0:
            current_frame = self.queue_output.get()
        if current_frame is not None:
            self.old_frame = current_frame
            rgb_img = cv2.cvtColor(current_frame, cv2.COLOR_BGR2RGB)
            # rgb_img = self.img.copy()
            qt_img = QPixmap.fromImage(
                QtGui.QImage(rgb_img.data, rgb_img.shape[1], rgb_img.shape[0], QtGui.QImage.Format_RGB888)).scaled(
                self.camera_frame.width(), self.camera_frame.height())
            self.camera_frame.setPixmap(qt_img)
        self.update()

    def retranslateUi(self, form_camera):

        _translate = QtCore.QCoreApplication.translate
        form_camera.setWindowTitle(_translate("form_camera", "Form"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    ui = D3_Camera_Item()
    ui.show()
    sys.exit(app.exec_())
